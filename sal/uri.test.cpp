#include <sal/uri.hpp>
#include <sal/common.test.hpp>
#include <ostream>


namespace sal {


std::ostream &print (std::ostream &os, const std::string_view &piece)
{
  if (!piece.data())
  {
    return (os << "{}");
  }
  else if (piece.empty())
  {
    return (os << "''");
  }
  return (os << piece);
}


std::ostream &operator<< (std::ostream &os, const sal::uri_view_t &uri)
{
  print(os, uri.scheme) << '|';
  print(os, uri.user_info) << '|';
  print(os, uri.host) << '|';
  print(os, uri.port) << '|';
  print(os, uri.path) << '|';
  print(os, uri.query) << '|';
  print(os, uri.fragment);
  return os;
}


bool cmp (const std::string_view &left, const std::string_view &right) noexcept
{
  if (left.data() && right.data())
  {
    return left == right;
  }
  else if (!left.data() && !right.data())
  {
    return true;
  }
  return false;
}


bool operator== (const uri_view_t &left, const uri_view_t &right) noexcept
{
  return cmp(left.scheme, right.scheme)
    && cmp(left.user_info, right.user_info)
    && cmp(left.host, right.host)
    && cmp(left.port, right.port)
    && cmp(left.path, right.path)
    && cmp(left.query, right.query)
    && cmp(left.fragment, right.fragment)
  ;
}


} // namespace sal


namespace {


struct test_case_t
{
  std::string uri{};
  sal::uri_view_t expected_components{};
  bool expect_success;

  test_case_t (const sal::uri_view_t &expected)
    : expected_components(expected)
    , expect_success(true)
  {}

  test_case_t ()
    : expect_success(false)
  {}

  friend std::ostream &operator<< (std::ostream &os, const test_case_t &test_case)
  {
    return (os << '\'' << test_case.uri << '\'');
  }
};


test_case_t ok (std::string uri, const sal::uri_view_t &components)
{
  test_case_t result{components};
  result.uri = uri;
  return result;
}


test_case_t fail (std::string uri)
{
  test_case_t result;
  result.uri = uri;
  return result;
}


sal::uri_view_t uri (
  const std::string_view &scheme,
  const std::string_view &user_info,
  const std::string_view &host,
  const std::string_view &port,
  const std::string_view &path,
  const std::string_view &query,
  const std::string_view &fragment) noexcept
{
  sal::uri_view_t uri;
  uri.scheme = scheme;
  uri.user_info = user_info;
  uri.host = host;
  uri.port = port;
  uri.path = path;
  uri.query = query;
  uri.fragment = fragment;
  return uri;
}


test_case_t test_cases[] =
{
  ok("scheme://user:pass@host:12345/path?query#fragment",
    uri(
      "scheme",
      "user:pass",
      "host",
      "12345",
      "/path",
      "query",
      "fragment"
    )
  ),

  ok(" \t\r\nscheme://user:pass@host:12345/path?query#fragment\t\r\n ",
    uri(
      "scheme",
      "user:pass",
      "host",
      "12345",
      "/path",
      "query",
      "fragment"
    )
  ),

  //
  // Tests from https://rosettacode.org/wiki/URL_parser
  //

  ok("foo://example.com:8042/over/there?name=ferret#nose",
    uri(
      "foo",
      {},
      "example.com",
      "8042",
      "/over/there",
      "name=ferret",
      "nose"
    )
  ),

  ok("urn:example:animal:ferret:nose",
    uri(
      "urn",
      {},
      {},
      {},
      "example:animal:ferret:nose",
      {},
      {}
    )
  ),

  ok("jdbc:mysql://test_user:ouupppssss@localhost:3306/sakila?profileSQL=true",
    uri(
      "jdbc",
      {},
      {},
      {},
      "mysql://test_user:ouupppssss@localhost:3306/sakila",
      "profileSQL=true",
      {}
    )
  ),

  ok("ftp://ftp.is.co.za/rfc/rfc1808.txt",
    uri(
      "ftp",
      {},
      "ftp.is.co.za",
      {},
      "/rfc/rfc1808.txt",
      {},
      {}
    )
  ),

  ok("http://www.ietf.org/rfc/rfc2396.txt#header1",
    uri(
      "http",
      {},
      "www.ietf.org",
      {},
      "/rfc/rfc2396.txt",
      {},
      "header1"
    )
  ),

  ok("ldap://[2001:db8::7]/c=GB?objectClass=one&objectClass=two",
    uri(
      "ldap",
      {},
      "[2001:db8::7]",
      {},
      "/c=GB",
      "objectClass=one&objectClass=two",
      {}
    )
  ),

  ok("mailto:John.Doe@example.com",
    uri(
      "mailto",
      {},
      {},
      {},
      "John.Doe@example.com",
      {},
      {}
    )
  ),

  ok("news:comp.infosystems.www.servers.unix",
    uri(
      "news",
      {},
      {},
      {},
      "comp.infosystems.www.servers.unix",
      {},
      {}
    )
  ),

  ok("tel:+1-816-555-1212",
    uri(
      "tel",
      {},
      {},
      {},
      "+1-816-555-1212",
      {},
      {}
    )
  ),

  ok("telnet://192.0.2.16:80/",
    uri(
      "telnet",
      {},
      "192.0.2.16",
      "80",
      "/",
      {},
      {}
    )
  ),

  ok("urn:oasis:names:specification:docbook:dtd:xml:4.1.2",
    uri(
      "urn",
      {},
      {},
      {},
      "oasis:names:specification:docbook:dtd:xml:4.1.2",
      {},
      {}
    )
  ),

  //
  // Systematic tests
  // For all combinations, it would be over 6k cases. Use only some
  //

  // uri                            scheme	user		host		port		path		query		fragment
  ok({},			uri({},		{},		{},		{},		{},		{},		{}	)),
  ok("\t\r\n",			uri({},		{},		{},		{},		{},		{},		{}	)),
  ok("\t\r\n\0\t",		uri({},		{},		{},		{},		{},		{},		{}	)),

  ok("#f",			uri({},		{},		{},		{},		{},		{},		"f"	)),
  ok("?q",			uri({},		{},		{},		{},		{},		"q",		{}	)),
  ok("?#",			uri({},		{},		{},		{},		{},		"",		""	)),
  ok("?#f",			uri({},		{},		{},		{},		{},		"",		"f"	)),
  ok("?q#f",			uri({},		{},		{},		{},		{},		"q",		"f"	)),
  ok("?q#",			uri({},		{},		{},		{},		{},		"q",		""	)),
  ok("/#f",			uri({},		{},		{},		{},		"/",		{},		"f"	)),
  ok("/?q",			uri({},		{},		{},		{},		"/",		"q",		{}	)),
  ok("/?#",			uri({},		{},		{},		{},		"/",		"",		""	)),
  ok("/?#f",			uri({},		{},		{},		{},		"/",		"",		"f"	)),
  ok("/?q#f",			uri({},		{},		{},		{},		"/",		"q",		"f"	)),
  ok("/?q#",			uri({},		{},		{},		{},		"/",		"q",		""	)),
  ok("/p#f",			uri({},		{},		{},		{},		"/p",		{},		"f"	)),
  ok("/p?q",			uri({},		{},		{},		{},		"/p",		"q",		{}	)),
  ok("/p?#",			uri({},		{},		{},		{},		"/p",		"",		""	)),
  ok("/p?#f",			uri({},		{},		{},		{},		"/p",		"",		"f"	)),
  ok("/p?q#f",			uri({},		{},		{},		{},		"/p",		"q",		"f"	)),
  ok("/p?q#",			uri({},		{},		{},		{},		"/p",		"q",		""	)),
  ok("./p#f",			uri({},		{},		{},		{},		"./p",		{},		"f"	)),
  ok("./p?q",			uri({},		{},		{},		{},		"./p",		"q",		{}	)),
  ok("./p?#",			uri({},		{},		{},		{},		"./p",		"",		""	)),
  ok("./p?#f",			uri({},		{},		{},		{},		"./p",		"",		"f"	)),
  ok("./p?q#f",			uri({},		{},		{},		{},		"./p",		"q",		"f"	)),
  ok("./p?q#",			uri({},		{},		{},		{},		"./p",		"q",		""	)),
  ok("../p#f",			uri({},		{},		{},		{},		"../p",		{},		"f"	)),
  ok("../p?q",			uri({},		{},		{},		{},		"../p",		"q",		{}	)),
  ok("../p?#",			uri({},		{},		{},		{},		"../p",		"",		""	)),
  ok("../p?#f",			uri({},		{},		{},		{},		"../p",		"",		"f"	)),
  ok("../p?q#f",		uri({},		{},		{},		{},		"../p",		"q",		"f"	)),
  ok("../p?q#",			uri({},		{},		{},		{},		"../p",		"q",		""	)),

  ok("//h#f",			uri({},		{},		"h",		{},		{},		{},		"f"	)),
  ok("//h?q",			uri({},		{},		"h",		{},		{},		"q",		{}	)),
  ok("//h?#",			uri({},		{},		"h",		{},		{},		"",		""	)),
  ok("//h?#f",			uri({},		{},		"h",		{},		{},		"",		"f"	)),
  ok("//h?q#f",			uri({},		{},		"h",		{},		{},		"q",		"f"	)),
  ok("//h?q#",			uri({},		{},		"h",		{},		{},		"q",		""	)),
  ok("//h/#f",			uri({},		{},		"h",		{},		"/",		{},		"f"	)),
  ok("//h/?q",			uri({},		{},		"h",		{},		"/",		"q",		{}	)),
  ok("//h/?#",			uri({},		{},		"h",		{},		"/",		"",		""	)),
  ok("//h/?#f",			uri({},		{},		"h",		{},		"/",		"",		"f"	)),
  ok("//h/?q#f",		uri({},		{},		"h",		{},		"/",		"q",		"f"	)),
  ok("//h/?q#",			uri({},		{},		"h",		{},		"/",		"q",		""	)),
  ok("//h/p#f",			uri({},		{},		"h",		{},		"/p",		{},		"f"	)),
  ok("//h/p?q",			uri({},		{},		"h",		{},		"/p",		"q",		{}	)),
  ok("//h/p?#",			uri({},		{},		"h",		{},		"/p",		"",		""	)),
  ok("//h/p?#f",		uri({},		{},		"h",		{},		"/p",		"",		"f"	)),
  ok("//h/p?q#f",		uri({},		{},		"h",		{},		"/p",		"q",		"f"	)),
  ok("//h/p?q#",		uri({},		{},		"h",		{},		"/p",		"q",		""	)),
  ok("//h./p#f",		uri({},		{},		"h.",		{},		"/p",		{},		"f"	)),
  ok("//h./p?q",		uri({},		{},		"h.",		{},		"/p",		"q",		{}	)),
  ok("//h./p?#",		uri({},		{},		"h.",		{},		"/p",		"",		""	)),
  ok("//h./p?#f",		uri({},		{},		"h.",		{},		"/p",		"",		"f"	)),
  ok("//h./p?q#f",		uri({},		{},		"h.",		{},		"/p",		"q",		"f"	)),
  ok("//h./p?q#",		uri({},		{},		"h.",		{},		"/p",		"q",		""	)),
  ok("//h../p#f",		uri({},		{},		"h..",		{},		"/p",		{},		"f"	)),
  ok("//h../p?q",		uri({},		{},		"h..",		{},		"/p",		"q",		{}	)),
  ok("//h../p?#",		uri({},		{},		"h..",		{},		"/p",		"",		""	)),
  ok("//h../p?#f",		uri({},		{},		"h..",		{},		"/p",		"",		"f"	)),
  ok("//h../p?q#f",		uri({},		{},		"h..",		{},		"/p",		"q",		"f"	)),
  ok("//h../p?q#",		uri({},		{},		"h..",		{},		"/p",		"q",		""	)),

  ok("//u:p@h#f",		uri({},		"u:p",		"h",		{},		{},		{},		"f"	)),
  ok("//u:p@h?q",		uri({},		"u:p",		"h",		{},		{},		"q",		{}	)),
  ok("//u:p@h?#",		uri({},		"u:p",		"h",		{},		{},		"",		""	)),
  ok("//u:p@h?#f",		uri({},		"u:p",		"h",		{},		{},		"",		"f"	)),
  ok("//u:p@h?q#f",		uri({},		"u:p",		"h",		{},		{},		"q",		"f"	)),
  ok("//u:p@h?q#",		uri({},		"u:p",		"h",		{},		{},		"q",		""	)),
  ok("//u:p@h/#f",		uri({},		"u:p",		"h",		{},		"/",		{},		"f"	)),
  ok("//u:p@h/?q",		uri({},		"u:p",		"h",		{},		"/",		"q",		{}	)),
  ok("//u:p@h/?#",		uri({},		"u:p",		"h",		{},		"/",		"",		""	)),
  ok("//u:p@h/?#f",		uri({},		"u:p",		"h",		{},		"/",		"",		"f"	)),
  ok("//u:p@h/?q#f",		uri({},		"u:p",		"h",		{},		"/",		"q",		"f"	)),
  ok("//u:p@h/?q#",		uri({},		"u:p",		"h",		{},		"/",		"q",		""	)),
  ok("//u:p@h/p#f",		uri({},		"u:p",		"h",		{},		"/p",		{},		"f"	)),
  ok("//u:p@h/p?q",		uri({},		"u:p",		"h",		{},		"/p",		"q",		{}	)),
  ok("//u:p@h/p?#",		uri({},		"u:p",		"h",		{},		"/p",		"",		""	)),
  ok("//u:p@h/p?#f",		uri({},		"u:p",		"h",		{},		"/p",		"",		"f"	)),
  ok("//u:p@h/p?q#f",		uri({},		"u:p",		"h",		{},		"/p",		"q",		"f"	)),
  ok("//u:p@h/p?q#",		uri({},		"u:p",		"h",		{},		"/p",		"q",		""	)),

  ok("//:@h#f",			uri({},		":",		"h",		{},		{},		{},		"f"	)),
  ok("//:@h?q",			uri({},		":",		"h",		{},		{},		"q",		{}	)),
  ok("//:@h?#",			uri({},		":",		"h",		{},		{},		"",		""	)),
  ok("//:@h?#f",		uri({},		":",		"h",		{},		{},		"",		"f"	)),
  ok("//:@h?q#f",		uri({},		":",		"h",		{},		{},		"q",		"f"	)),
  ok("//:@h?q#",		uri({},		":",		"h",		{},		{},		"q",		""	)),
  ok("//:@h/#f",		uri({},		":",		"h",		{},		"/",		{},		"f"	)),
  ok("//:@h/?q",		uri({},		":",		"h",		{},		"/",		"q",		{}	)),
  ok("//:@h/?#",		uri({},		":",		"h",		{},		"/",		"",		""	)),
  ok("//:@h/?#f",		uri({},		":",		"h",		{},		"/",		"",		"f"	)),
  ok("//:@h/?q#f",		uri({},		":",		"h",		{},		"/",		"q",		"f"	)),
  ok("//:@h/?q#",		uri({},		":",		"h",		{},		"/",		"q",		""	)),
  ok("//:@h/p#f",		uri({},		":",		"h",		{},		"/p",		{},		"f"	)),
  ok("//:@h/p?q",		uri({},		":",		"h",		{},		"/p",		"q",		{}	)),
  ok("//:@h/p?#",		uri({},		":",		"h",		{},		"/p",		"",		""	)),
  ok("//:@h/p?#f",		uri({},		":",		"h",		{},		"/p",		"",		"f"	)),
  ok("//:@h/p?q#f",		uri({},		":",		"h",		{},		"/p",		"q",		"f"	)),
  ok("//:@h/p?q#",		uri({},		":",		"h",		{},		"/p",		"q",		""	)),

  ok("//@h#f",			uri({},		"",		"h",		{},		{},		{},		"f"	)),
  ok("//@h?q",			uri({},		"",		"h",		{},		{},		"q",		{}	)),
  ok("//@h?#",			uri({},		"",		"h",		{},		{},		"",		""	)),
  ok("//@h?#f",			uri({},		"",		"h",		{},		{},		"",		"f"	)),
  ok("//@h?q#f",		uri({},		"",		"h",		{},		{},		"q",		"f"	)),
  ok("//@h?q#",			uri({},		"",		"h",		{},		{},		"q",		""	)),
  ok("//@h/#f",			uri({},		"",		"h",		{},		"/",		{},		"f"	)),
  ok("//@h/?q",			uri({},		"",		"h",		{},		"/",		"q",		{}	)),
  ok("//@h/?#",			uri({},		"",		"h",		{},		"/",		"",		""	)),
  ok("//@h/?#f",		uri({},		"",		"h",		{},		"/",		"",		"f"	)),
  ok("//@h/?q#f",		uri({},		"",		"h",		{},		"/",		"q",		"f"	)),
  ok("//@h/?q#",		uri({},		"",		"h",		{},		"/",		"q",		""	)),
  ok("//@h/p#f",		uri({},		"",		"h",		{},		"/p",		{},		"f"	)),
  ok("//@h/p?q",		uri({},		"",		"h",		{},		"/p",		"q",		{}	)),
  ok("//@h/p?#",		uri({},		"",		"h",		{},		"/p",		"",		""	)),
  ok("//@h/p?#f",		uri({},		"",		"h",		{},		"/p",		"",		"f"	)),
  ok("//@h/p?q#f",		uri({},		"",		"h",		{},		"/p",		"q",		"f"	)),
  ok("//@h/p?q#",		uri({},		"",		"h",		{},		"/p",		"q",		""	)),

  ok("//@#f",			uri({},		"",		"",		{},		{},		{},		"f"	)),
  ok("//@?q",			uri({},		"",		"",		{},		{},		"q",		{}	)),
  ok("//@?#",			uri({},		"",		"",		{},		{},		"",		""	)),
  ok("//@?#f",			uri({},		"",		"",		{},		{},		"",		"f"	)),
  ok("//@?q#f",			uri({},		"",		"",		{},		{},		"q",		"f"	)),
  ok("//@?q#",			uri({},		"",		"",		{},		{},		"q",		""	)),
  ok("//@/#f",			uri({},		"",		"",		{},		"/",		{},		"f"	)),
  ok("//@/?q",			uri({},		"",		"",		{},		"/",		"q",		{}	)),
  ok("//@/?#",			uri({},		"",		"",		{},		"/",		"",		""	)),
  ok("//@/?#f",			uri({},		"",		"",		{},		"/",		"",		"f"	)),
  ok("//@/?q#f",		uri({},		"",		"",		{},		"/",		"q",		"f"	)),
  ok("//@/?q#",			uri({},		"",		"",		{},		"/",		"q",		""	)),
  ok("//@/p#f",			uri({},		"",		"",		{},		"/p",		{},		"f"	)),
  ok("//@/p?q",			uri({},		"",		"",		{},		"/p",		"q",		{}	)),
  ok("//@/p?#",			uri({},		"",		"",		{},		"/p",		"",		""	)),
  ok("//@/p?#f",		uri({},		"",		"",		{},		"/p",		"",		"f"	)),
  ok("//@/p?q#f",		uri({},		"",		"",		{},		"/p",		"q",		"f"	)),
  ok("//@/p?q#",		uri({},		"",		"",		{},		"/p",		"q",		""	)),

  ok("//u:p@#f",		uri({},		"u:p",		"",		{},		{},		{},		"f"	)),
  ok("//u:p@?q",		uri({},		"u:p",		"",		{},		{},		"q",		{}	)),
  ok("//u:p@?#",		uri({},		"u:p",		"",		{},		{},		"",		""	)),
  ok("//u:p@?#f",		uri({},		"u:p",		"",		{},		{},		"",		"f"	)),
  ok("//u:p@?q#f",		uri({},		"u:p",		"",		{},		{},		"q",		"f"	)),
  ok("//u:p@?q#",		uri({},		"u:p",		"",		{},		{},		"q",		""	)),
  ok("//u:p@/#f",		uri({},		"u:p",		"",		{},		"/",		{},		"f"	)),
  ok("//u:p@/?q",		uri({},		"u:p",		"",		{},		"/",		"q",		{}	)),
  ok("//u:p@/?#",		uri({},		"u:p",		"",		{},		"/",		"",		""	)),
  ok("//u:p@/?#f",		uri({},		"u:p",		"",		{},		"/",		"",		"f"	)),
  ok("//u:p@/?q#f",		uri({},		"u:p",		"",		{},		"/",		"q",		"f"	)),
  ok("//u:p@/?q#",		uri({},		"u:p",		"",		{},		"/",		"q",		""	)),
  ok("//u:p@/p#f",		uri({},		"u:p",		"",		{},		"/p",		{},		"f"	)),
  ok("//u:p@/p?q",		uri({},		"u:p",		"",		{},		"/p",		"q",		{}	)),
  ok("//u:p@/p?#",		uri({},		"u:p",		"",		{},		"/p",		"",		""	)),
  ok("//u:p@/p?#f",		uri({},		"u:p",		"",		{},		"/p",		"",		"f"	)),
  ok("//u:p@/p?q#f",		uri({},		"u:p",		"",		{},		"/p",		"q",		"f"	)),
  ok("//u:p@/p?q#",		uri({},		"u:p",		"",		{},		"/p",		"q",		""	)),

  ok("//h:123#f",		uri({},		{},		"h",		"123",		{},		{},		"f"	)),
  ok("//h:123?q",		uri({},		{},		"h",		"123",		{},		"q",		{}	)),
  ok("//h:123?#",		uri({},		{},		"h",		"123",		{},		"",		""	)),
  ok("//h:123?#f",		uri({},		{},		"h",		"123",		{},		"",		"f"	)),
  ok("//h:123?q#f",		uri({},		{},		"h",		"123",		{},		"q",		"f"	)),
  ok("//h:123?q#",		uri({},		{},		"h",		"123",		{},		"q",		""	)),
  ok("//h:123/#f",		uri({},		{},		"h",		"123",		"/",		{},		"f"	)),
  ok("//h:123/?q",		uri({},		{},		"h",		"123",		"/",		"q",		{}	)),
  ok("//h:123/?#",		uri({},		{},		"h",		"123",		"/",		"",		""	)),
  ok("//h:123/?#f",		uri({},		{},		"h",		"123",		"/",		"",		"f"	)),
  ok("//h:123/?q#f",		uri({},		{},		"h",		"123",		"/",		"q",		"f"	)),
  ok("//h:123/?q#",		uri({},		{},		"h",		"123",		"/",		"q",		""	)),
  ok("//h:123/p#f",		uri({},		{},		"h",		"123",		"/p",		{},		"f"	)),
  ok("//h:123/p?q",		uri({},		{},		"h",		"123",		"/p",		"q",		{}	)),
  ok("//h:123/p?#",		uri({},		{},		"h",		"123",		"/p",		"",		""	)),
  ok("//h:123/p?#f",		uri({},		{},		"h",		"123",		"/p",		"",		"f"	)),
  ok("//h:123/p?q#f",		uri({},		{},		"h",		"123",		"/p",		"q",		"f"	)),
  ok("//h:123/p?q#",		uri({},		{},		"h",		"123",		"/p",		"q",		""	)),

  ok("//:123#f",		uri({},		{},		"",		"123",		{},		{},		"f"	)),
  ok("//:123?q",		uri({},		{},		"",		"123",		{},		"q",		{}	)),
  ok("//:123?#",		uri({},		{},		"",		"123",		{},		"",		""	)),
  ok("//:123?#f",		uri({},		{},		"",		"123",		{},		"",		"f"	)),
  ok("//:123?q#f",		uri({},		{},		"",		"123",		{},		"q",		"f"	)),
  ok("//:123?q#",		uri({},		{},		"",		"123",		{},		"q",		""	)),
  ok("//:123/#f",		uri({},		{},		"",		"123",		"/",		{},		"f"	)),
  ok("//:123/?q",		uri({},		{},		"",		"123",		"/",		"q",		{}	)),
  ok("//:123/?#",		uri({},		{},		"",		"123",		"/",		"",		""	)),
  ok("//:123/?#f",		uri({},		{},		"",		"123",		"/",		"",		"f"	)),
  ok("//:123/?q#f",		uri({},		{},		"",		"123",		"/",		"q",		"f"	)),
  ok("//:123/?q#",		uri({},		{},		"",		"123",		"/",		"q",		""	)),
  ok("//:123/p#f",		uri({},		{},		"",		"123",		"/p",		{},		"f"	)),
  ok("//:123/p?q",		uri({},		{},		"",		"123",		"/p",		"q",		{}	)),
  ok("//:123/p?#",		uri({},		{},		"",		"123",		"/p",		"",		""	)),
  ok("//:123/p?#f",		uri({},		{},		"",		"123",		"/p",		"",		"f"	)),
  ok("//:123/p?q#f",		uri({},		{},		"",		"123",		"/p",		"q",		"f"	)),
  ok("//:123/p?q#",		uri({},		{},		"",		"123",		"/p",		"q",		""	)),

  ok("//h:#f",			uri({},		{},		"h",		"",		{},		{},		"f"	)),
  ok("//h:?q",			uri({},		{},		"h",		"",		{},		"q",		{}	)),
  ok("//h:?#",			uri({},		{},		"h",		"",		{},		"",		""	)),
  ok("//h:?#f",			uri({},		{},		"h",		"",		{},		"",		"f"	)),
  ok("//h:?q#f",		uri({},		{},		"h",		"",		{},		"q",		"f"	)),
  ok("//h:?q#",			uri({},		{},		"h",		"",		{},		"q",		""	)),
  ok("//h:/#f",			uri({},		{},		"h",		"",		"/",		{},		"f"	)),
  ok("//h:/?q",			uri({},		{},		"h",		"",		"/",		"q",		{}	)),
  ok("//h:/?#",			uri({},		{},		"h",		"",		"/",		"",		""	)),
  ok("//h:/?#f",		uri({},		{},		"h",		"",		"/",		"",		"f"	)),
  ok("//h:/?q#f",		uri({},		{},		"h",		"",		"/",		"q",		"f"	)),
  ok("//h:/?q#",		uri({},		{},		"h",		"",		"/",		"q",		""	)),
  ok("//h:/p#f",		uri({},		{},		"h",		"",		"/p",		{},		"f"	)),
  ok("//h:/p?q",		uri({},		{},		"h",		"",		"/p",		"q",		{}	)),
  ok("//h:/p?#",		uri({},		{},		"h",		"",		"/p",		"",		""	)),
  ok("//h:/p?#f",		uri({},		{},		"h",		"",		"/p",		"",		"f"	)),
  ok("//h:/p?q#f",		uri({},		{},		"h",		"",		"/p",		"q",		"f"	)),
  ok("//h:/p?q#",		uri({},		{},		"h",		"",		"/p",		"q",		""	)),

  ok("//10.0.0.1:123#f",	uri({},		{},		"10.0.0.1",	"123",		{},		{},		"f"	)),
  ok("//10.0.0.1:123?q",	uri({},		{},		"10.0.0.1",	"123",		{},		"q",		{}	)),
  ok("//10.0.0.1:123?#",	uri({},		{},		"10.0.0.1",	"123",		{},		"",		""	)),
  ok("//10.0.0.1:123?#f",	uri({},		{},		"10.0.0.1",	"123",		{},		"",		"f"	)),
  ok("//10.0.0.1:123?q#f",	uri({},		{},		"10.0.0.1",	"123",		{},		"q",		"f"	)),
  ok("//10.0.0.1:123?q#",	uri({},		{},		"10.0.0.1",	"123",		{},		"q",		""	)),
  ok("//10.0.0.1:123/#f",	uri({},		{},		"10.0.0.1",	"123",		"/",		{},		"f"	)),
  ok("//10.0.0.1:123/?q",	uri({},		{},		"10.0.0.1",	"123",		"/",		"q",		{}	)),
  ok("//10.0.0.1:123/?#",	uri({},		{},		"10.0.0.1",	"123",		"/",		"",		""	)),
  ok("//10.0.0.1:123/?#f",	uri({},		{},		"10.0.0.1",	"123",		"/",		"",		"f"	)),
  ok("//10.0.0.1:123/?q#f",	uri({},		{},		"10.0.0.1",	"123",		"/",		"q",		"f"	)),
  ok("//10.0.0.1:123/?q#",	uri({},		{},		"10.0.0.1",	"123",		"/",		"q",		""	)),
  ok("//10.0.0.1:123/p#f",	uri({},		{},		"10.0.0.1",	"123",		"/p",		{},		"f"	)),
  ok("//10.0.0.1:123/p?q",	uri({},		{},		"10.0.0.1",	"123",		"/p",		"q",		{}	)),
  ok("//10.0.0.1:123/p?#",	uri({},		{},		"10.0.0.1",	"123",		"/p",		"",		""	)),
  ok("//10.0.0.1:123/p?#f",	uri({},		{},		"10.0.0.1",	"123",		"/p",		"",		"f"	)),
  ok("//10.0.0.1:123/p?q#f",	uri({},		{},		"10.0.0.1",	"123",		"/p",		"q",		"f"	)),
  ok("//10.0.0.1:123/p?q#",	uri({},		{},		"10.0.0.1",	"123",		"/p",		"q",		""	)),

  ok("//10.0.0.1:#f",		uri({},		{},		"10.0.0.1",	"",		{},		{},		"f"	)),
  ok("//10.0.0.1:?q",		uri({},		{},		"10.0.0.1",	"",		{},		"q",		{}	)),
  ok("//10.0.0.1:?#",		uri({},		{},		"10.0.0.1",	"",		{},		"",		""	)),
  ok("//10.0.0.1:?#f",		uri({},		{},		"10.0.0.1",	"",		{},		"",		"f"	)),
  ok("//10.0.0.1:?q#f",		uri({},		{},		"10.0.0.1",	"",		{},		"q",		"f"	)),
  ok("//10.0.0.1:?q#",		uri({},		{},		"10.0.0.1",	"",		{},		"q",		""	)),
  ok("//10.0.0.1:/#f",		uri({},		{},		"10.0.0.1",	"",		"/",		{},		"f"	)),
  ok("//10.0.0.1:/?q",		uri({},		{},		"10.0.0.1",	"",		"/",		"q",		{}	)),
  ok("//10.0.0.1:/?#",		uri({},		{},		"10.0.0.1",	"",		"/",		"",		""	)),
  ok("//10.0.0.1:/?#f",		uri({},		{},		"10.0.0.1",	"",		"/",		"",		"f"	)),
  ok("//10.0.0.1:/?q#f",	uri({},		{},		"10.0.0.1",	"",		"/",		"q",		"f"	)),
  ok("//10.0.0.1:/?q#",		uri({},		{},		"10.0.0.1",	"",		"/",		"q",		""	)),
  ok("//10.0.0.1:/p#f",		uri({},		{},		"10.0.0.1",	"",		"/p",		{},		"f"	)),
  ok("//10.0.0.1:/p?q",		uri({},		{},		"10.0.0.1",	"",		"/p",		"q",		{}	)),
  ok("//10.0.0.1:/p?#",		uri({},		{},		"10.0.0.1",	"",		"/p",		"",		""	)),
  ok("//10.0.0.1:/p?#f",	uri({},		{},		"10.0.0.1",	"",		"/p",		"",		"f"	)),
  ok("//10.0.0.1:/p?q#f",	uri({},		{},		"10.0.0.1",	"",		"/p",		"q",		"f"	)),
  ok("//10.0.0.1:/p?q#",	uri({},		{},		"10.0.0.1",	"",		"/p",		"q",		""	)),

  ok("//[::1]:123#f",		uri({},		{},		"[::1]",	"123",		{},		{},		"f"	)),
  ok("//[::1]:123?q",		uri({},		{},		"[::1]",	"123",		{},		"q",		{}	)),
  ok("//[::1]:123?#",		uri({},		{},		"[::1]",	"123",		{},		"",		""	)),
  ok("//[::1]:123?#f",		uri({},		{},		"[::1]",	"123",		{},		"",		"f"	)),
  ok("//[::1]:123?q#f",		uri({},		{},		"[::1]",	"123",		{},		"q",		"f"	)),
  ok("//[::1]:123?q#",		uri({},		{},		"[::1]",	"123",		{},		"q",		""	)),
  ok("//[::1]:123/#f",		uri({},		{},		"[::1]",	"123",		"/",		{},		"f"	)),
  ok("//[::1]:123/?q",		uri({},		{},		"[::1]",	"123",		"/",		"q",		{}	)),
  ok("//[::1]:123/?#",		uri({},		{},		"[::1]",	"123",		"/",		"",		""	)),
  ok("//[::1]:123/?#f",		uri({},		{},		"[::1]",	"123",		"/",		"",		"f"	)),
  ok("//[::1]:123/?q#f",	uri({},		{},		"[::1]",	"123",		"/",		"q",		"f"	)),
  ok("//[::1]:123/?q#",		uri({},		{},		"[::1]",	"123",		"/",		"q",		""	)),
  ok("//[::1]:123/p#f",		uri({},		{},		"[::1]",	"123",		"/p",		{},		"f"	)),
  ok("//[::1]:123/p?q",		uri({},		{},		"[::1]",	"123",		"/p",		"q",		{}	)),
  ok("//[::1]:123/p?#",		uri({},		{},		"[::1]",	"123",		"/p",		"",		""	)),
  ok("//[::1]:123/p?#f",	uri({},		{},		"[::1]",	"123",		"/p",		"",		"f"	)),
  ok("//[::1]:123/p?q#f",	uri({},		{},		"[::1]",	"123",		"/p",		"q",		"f"	)),
  ok("//[::1]:123/p?q#",	uri({},		{},		"[::1]",	"123",		"/p",		"q",		""	)),

  ok("//[::1]:#f",		uri({},		{},		"[::1]",	"",		{},		{},		"f"	)),
  ok("//[::1]:?q",		uri({},		{},		"[::1]",	"",		{},		"q",		{}	)),
  ok("//[::1]:?#",		uri({},		{},		"[::1]",	"",		{},		"",		""	)),
  ok("//[::1]:?#f",		uri({},		{},		"[::1]",	"",		{},		"",		"f"	)),
  ok("//[::1]:?q#f",		uri({},		{},		"[::1]",	"",		{},		"q",		"f"	)),
  ok("//[::1]:?q#",		uri({},		{},		"[::1]",	"",		{},		"q",		""	)),
  ok("//[::1]:/#f",		uri({},		{},		"[::1]",	"",		"/",		{},		"f"	)),
  ok("//[::1]:/?q",		uri({},		{},		"[::1]",	"",		"/",		"q",		{}	)),
  ok("//[::1]:/?#",		uri({},		{},		"[::1]",	"",		"/",		"",		""	)),
  ok("//[::1]:/?#f",		uri({},		{},		"[::1]",	"",		"/",		"",		"f"	)),
  ok("//[::1]:/?q#f",		uri({},		{},		"[::1]",	"",		"/",		"q",		"f"	)),
  ok("//[::1]:/?q#",		uri({},		{},		"[::1]",	"",		"/",		"q",		""	)),
  ok("//[::1]:/p#f",		uri({},		{},		"[::1]",	"",		"/p",		{},		"f"	)),
  ok("//[::1]:/p?q",		uri({},		{},		"[::1]",	"",		"/p",		"q",		{}	)),
  ok("//[::1]:/p?#",		uri({},		{},		"[::1]",	"",		"/p",		"",		""	)),
  ok("//[::1]:/p?#f",		uri({},		{},		"[::1]",	"",		"/p",		"",		"f"	)),
  ok("//[::1]:/p?q#f",		uri({},		{},		"[::1]",	"",		"/p",		"q",		"f"	)),
  ok("//[::1]:/p?q#",		uri({},		{},		"[::1]",	"",		"/p",		"q",		""	)),

  ok("s://u:p@h#f",		uri("s",	"u:p",		"h",		{},		{},		{},		"f"	)),
  ok("s://u:p@h?q",		uri("s",	"u:p",		"h",		{},		{},		"q",		{}	)),
  ok("s://u:p@h?#",		uri("s",	"u:p",		"h",		{},		{},		"",		""	)),
  ok("s://u:p@h?#f",		uri("s",	"u:p",		"h",		{},		{},		"",		"f"	)),
  ok("s://u:p@h?q#f",		uri("s",	"u:p",		"h",		{},		{},		"q",		"f"	)),
  ok("s://u:p@h?q#",		uri("s",	"u:p",		"h",		{},		{},		"q",		""	)),
  ok("s://u:p@h/#f",		uri("s",	"u:p",		"h",		{},		"/",		{},		"f"	)),
  ok("s://u:p@h/?q",		uri("s",	"u:p",		"h",		{},		"/",		"q",		{}	)),
  ok("s://u:p@h/?#",		uri("s",	"u:p",		"h",		{},		"/",		"",		""	)),
  ok("s://u:p@h/?#f",		uri("s",	"u:p",		"h",		{},		"/",		"",		"f"	)),
  ok("s://u:p@h/?q#f",		uri("s",	"u:p",		"h",		{},		"/",		"q",		"f"	)),
  ok("s://u:p@h/?q#",		uri("s",	"u:p",		"h",		{},		"/",		"q",		""	)),
  ok("s://u:p@h/p#f",		uri("s",	"u:p",		"h",		{},		"/p",		{},		"f"	)),
  ok("s://u:p@h/p?q",		uri("s",	"u:p",		"h",		{},		"/p",		"q",		{}	)),
  ok("s://u:p@h/p?#",		uri("s",	"u:p",		"h",		{},		"/p",		"",		""	)),
  ok("s://u:p@h/p?#f",		uri("s",	"u:p",		"h",		{},		"/p",		"",		"f"	)),
  ok("s://u:p@h/p?q#f",		uri("s",	"u:p",		"h",		{},		"/p",		"q",		"f"	)),
  ok("s://u:p@h/p?q#",		uri("s",	"u:p",		"h",		{},		"/p",		"q",		""	)),

  ok("s://:@h#f",		uri("s",	":",		"h",		{},		{},		{},		"f"	)),
  ok("s://:@h?q",		uri("s",	":",		"h",		{},		{},		"q",		{}	)),
  ok("s://:@h?#",		uri("s",	":",		"h",		{},		{},		"",		""	)),
  ok("s://:@h?#f",		uri("s",	":",		"h",		{},		{},		"",		"f"	)),
  ok("s://:@h?q#f",		uri("s",	":",		"h",		{},		{},		"q",		"f"	)),
  ok("s://:@h?q#",		uri("s",	":",		"h",		{},		{},		"q",		""	)),
  ok("s://:@h/#f",		uri("s",	":",		"h",		{},		"/",		{},		"f"	)),
  ok("s://:@h/?q",		uri("s",	":",		"h",		{},		"/",		"q",		{}	)),
  ok("s://:@h/?#",		uri("s",	":",		"h",		{},		"/",		"",		""	)),
  ok("s://:@h/?#f",		uri("s",	":",		"h",		{},		"/",		"",		"f"	)),
  ok("s://:@h/?q#f",		uri("s",	":",		"h",		{},		"/",		"q",		"f"	)),
  ok("s://:@h/?q#",		uri("s",	":",		"h",		{},		"/",		"q",		""	)),
  ok("s://:@h/p#f",		uri("s",	":",		"h",		{},		"/p",		{},		"f"	)),
  ok("s://:@h/p?q",		uri("s",	":",		"h",		{},		"/p",		"q",		{}	)),
  ok("s://:@h/p?#",		uri("s",	":",		"h",		{},		"/p",		"",		""	)),
  ok("s://:@h/p?#f",		uri("s",	":",		"h",		{},		"/p",		"",		"f"	)),
  ok("s://:@h/p?q#f",		uri("s",	":",		"h",		{},		"/p",		"q",		"f"	)),
  ok("s://:@h/p?q#",		uri("s",	":",		"h",		{},		"/p",		"q",		""	)),

  ok("s://@h#f",		uri("s",	"",		"h",		{},		{},		{},		"f"	)),
  ok("s://@h?q",		uri("s",	"",		"h",		{},		{},		"q",		{}	)),
  ok("s://@h?#",		uri("s",	"",		"h",		{},		{},		"",		""	)),
  ok("s://@h?#f",		uri("s",	"",		"h",		{},		{},		"",		"f"	)),
  ok("s://@h?q#f",		uri("s",	"",		"h",		{},		{},		"q",		"f"	)),
  ok("s://@h?q#",		uri("s",	"",		"h",		{},		{},		"q",		""	)),
  ok("s://@h/#f",		uri("s",	"",		"h",		{},		"/",		{},		"f"	)),
  ok("s://@h/?q",		uri("s",	"",		"h",		{},		"/",		"q",		{}	)),
  ok("s://@h/?#",		uri("s",	"",		"h",		{},		"/",		"",		""	)),
  ok("s://@h/?#f",		uri("s",	"",		"h",		{},		"/",		"",		"f"	)),
  ok("s://@h/?q#f",		uri("s",	"",		"h",		{},		"/",		"q",		"f"	)),
  ok("s://@h/?q#",		uri("s",	"",		"h",		{},		"/",		"q",		""	)),
  ok("s://@h/p#f",		uri("s",	"",		"h",		{},		"/p",		{},		"f"	)),
  ok("s://@h/p?q",		uri("s",	"",		"h",		{},		"/p",		"q",		{}	)),
  ok("s://@h/p?#",		uri("s",	"",		"h",		{},		"/p",		"",		""	)),
  ok("s://@h/p?#f",		uri("s",	"",		"h",		{},		"/p",		"",		"f"	)),
  ok("s://@h/p?q#f",		uri("s",	"",		"h",		{},		"/p",		"q",		"f"	)),
  ok("s://@h/p?q#",		uri("s",	"",		"h",		{},		"/p",		"q",		""	)),

  ok("s://h#f",			uri("s",	{},		"h",		{},		{},		{},		"f"	)),
  ok("s://h?q",			uri("s",	{},		"h",		{},		{},		"q",		{}	)),
  ok("s://h?#",			uri("s",	{},		"h",		{},		{},		"",		""	)),
  ok("s://h?#f",		uri("s",	{},		"h",		{},		{},		"",		"f"	)),
  ok("s://h?q#f",		uri("s",	{},		"h",		{},		{},		"q",		"f"	)),
  ok("s://h?q#",		uri("s",	{},		"h",		{},		{},		"q",		""	)),
  ok("s://h/#f",		uri("s",	{},		"h",		{},		"/",		{},		"f"	)),
  ok("s://h/?q",		uri("s",	{},		"h",		{},		"/",		"q",		{}	)),
  ok("s://h/?#",		uri("s",	{},		"h",		{},		"/",		"",		""	)),
  ok("s://h/?#f",		uri("s",	{},		"h",		{},		"/",		"",		"f"	)),
  ok("s://h/?q#f",		uri("s",	{},		"h",		{},		"/",		"q",		"f"	)),
  ok("s://h/?q#",		uri("s",	{},		"h",		{},		"/",		"q",		""	)),
  ok("s://h/p#f",		uri("s",	{},		"h",		{},		"/p",		{},		"f"	)),
  ok("s://h/p?q",		uri("s",	{},		"h",		{},		"/p",		"q",		{}	)),
  ok("s://h/p?#",		uri("s",	{},		"h",		{},		"/p",		"",		""	)),
  ok("s://h/p?#f",		uri("s",	{},		"h",		{},		"/p",		"",		"f"	)),
  ok("s://h/p?q#f",		uri("s",	{},		"h",		{},		"/p",		"q",		"f"	)),
  ok("s://h/p?q#",		uri("s",	{},		"h",		{},		"/p",		"q",		""	)),

  ok("s://h:123#f",		uri("s",	{},		"h",		"123",		{},		{},		"f"	)),
  ok("s://h:123?q",		uri("s",	{},		"h",		"123",		{},		"q",		{}	)),
  ok("s://h:123?#",		uri("s",	{},		"h",		"123",		{},		"",		""	)),
  ok("s://h:123?#f",		uri("s",	{},		"h",		"123",		{},		"",		"f"	)),
  ok("s://h:123?q#f",		uri("s",	{},		"h",		"123",		{},		"q",		"f"	)),
  ok("s://h:123?q#",		uri("s",	{},		"h",		"123",		{},		"q",		""	)),
  ok("s://h:123/#f",		uri("s",	{},		"h",		"123",		"/",		{},		"f"	)),
  ok("s://h:123/?q",		uri("s",	{},		"h",		"123",		"/",		"q",		{}	)),
  ok("s://h:123/?#",		uri("s",	{},		"h",		"123",		"/",		"",		""	)),
  ok("s://h:123/?#f",		uri("s",	{},		"h",		"123",		"/",		"",		"f"	)),
  ok("s://h:123/?q#f",		uri("s",	{},		"h",		"123",		"/",		"q",		"f"	)),
  ok("s://h:123/?q#",		uri("s",	{},		"h",		"123",		"/",		"q",		""	)),
  ok("s://h:123/p#f",		uri("s",	{},		"h",		"123",		"/p",		{},		"f"	)),
  ok("s://h:123/p?q",		uri("s",	{},		"h",		"123",		"/p",		"q",		{}	)),
  ok("s://h:123/p?#",		uri("s",	{},		"h",		"123",		"/p",		"",		""	)),
  ok("s://h:123/p?#f",		uri("s",	{},		"h",		"123",		"/p",		"",		"f"	)),
  ok("s://h:123/p?q#f",		uri("s",	{},		"h",		"123",		"/p",		"q",		"f"	)),
  ok("s://h:123/p?q#",		uri("s",	{},		"h",		"123",		"/p",		"q",		""	)),

  ok("s://:123#f",		uri("s",	{},		"",		"123",		{},		{},		"f"	)),
  ok("s://:123?q",		uri("s",	{},		"",		"123",		{},		"q",		{}	)),
  ok("s://:123?#",		uri("s",	{},		"",		"123",		{},		"",		""	)),
  ok("s://:123?#f",		uri("s",	{},		"",		"123",		{},		"",		"f"	)),
  ok("s://:123?q#f",		uri("s",	{},		"",		"123",		{},		"q",		"f"	)),
  ok("s://:123?q#",		uri("s",	{},		"",		"123",		{},		"q",		""	)),
  ok("s://:123/#f",		uri("s",	{},		"",		"123",		"/",		{},		"f"	)),
  ok("s://:123/?q",		uri("s",	{},		"",		"123",		"/",		"q",		{}	)),
  ok("s://:123/?#",		uri("s",	{},		"",		"123",		"/",		"",		""	)),
  ok("s://:123/?#f",		uri("s",	{},		"",		"123",		"/",		"",		"f"	)),
  ok("s://:123/?q#f",		uri("s",	{},		"",		"123",		"/",		"q",		"f"	)),
  ok("s://:123/?q#",		uri("s",	{},		"",		"123",		"/",		"q",		""	)),
  ok("s://:123/p#f",		uri("s",	{},		"",		"123",		"/p",		{},		"f"	)),
  ok("s://:123/p?q",		uri("s",	{},		"",		"123",		"/p",		"q",		{}	)),
  ok("s://:123/p?#",		uri("s",	{},		"",		"123",		"/p",		"",		""	)),
  ok("s://:123/p?#f",		uri("s",	{},		"",		"123",		"/p",		"",		"f"	)),
  ok("s://:123/p?q#f",		uri("s",	{},		"",		"123",		"/p",		"q",		"f"	)),
  ok("s://:123/p?q#",		uri("s",	{},		"",		"123",		"/p",		"q",		""	)),

  ok("s://:#f",			uri("s",	{},		"",		"",		{},		{},		"f"	)),
  ok("s://:?q",			uri("s",	{},		"",		"",		{},		"q",		{}	)),
  ok("s://:?#",			uri("s",	{},		"",		"",		{},		"",		""	)),
  ok("s://:?#f",		uri("s",	{},		"",		"",		{},		"",		"f"	)),
  ok("s://:?q#f",		uri("s",	{},		"",		"",		{},		"q",		"f"	)),
  ok("s://:?q#",		uri("s",	{},		"",		"",		{},		"q",		""	)),
  ok("s://:/#f",		uri("s",	{},		"",		"",		"/",		{},		"f"	)),
  ok("s://:/?q",		uri("s",	{},		"",		"",		"/",		"q",		{}	)),
  ok("s://:/?#",		uri("s",	{},		"",		"",		"/",		"",		""	)),
  ok("s://:/?#f",		uri("s",	{},		"",		"",		"/",		"",		"f"	)),
  ok("s://:/?q#f",		uri("s",	{},		"",		"",		"/",		"q",		"f"	)),
  ok("s://:/?q#",		uri("s",	{},		"",		"",		"/",		"q",		""	)),
  ok("s://:/p#f",		uri("s",	{},		"",		"",		"/p",		{},		"f"	)),
  ok("s://:/p?q",		uri("s",	{},		"",		"",		"/p",		"q",		{}	)),
  ok("s://:/p?#",		uri("s",	{},		"",		"",		"/p",		"",		""	)),
  ok("s://:/p?#f",		uri("s",	{},		"",		"",		"/p",		"",		"f"	)),
  ok("s://:/p?q#f",		uri("s",	{},		"",		"",		"/p",		"q",		"f"	)),
  ok("s://:/p?q#",		uri("s",	{},		"",		"",		"/p",		"q",		""	)),

  ok("s://h:#f",		uri("s",	{},		"h",		"",		{},		{},		"f"	)),
  ok("s://h:?q",		uri("s",	{},		"h",		"",		{},		"q",		{}	)),
  ok("s://h:?#",		uri("s",	{},		"h",		"",		{},		"",		""	)),
  ok("s://h:?#f",		uri("s",	{},		"h",		"",		{},		"",		"f"	)),
  ok("s://h:?q#f",		uri("s",	{},		"h",		"",		{},		"q",		"f"	)),
  ok("s://h:?q#",		uri("s",	{},		"h",		"",		{},		"q",		""	)),
  ok("s://h:/#f",		uri("s",	{},		"h",		"",		"/",		{},		"f"	)),
  ok("s://h:/?q",		uri("s",	{},		"h",		"",		"/",		"q",		{}	)),
  ok("s://h:/?#",		uri("s",	{},		"h",		"",		"/",		"",		""	)),
  ok("s://h:/?#f",		uri("s",	{},		"h",		"",		"/",		"",		"f"	)),
  ok("s://h:/?q#f",		uri("s",	{},		"h",		"",		"/",		"q",		"f"	)),
  ok("s://h:/?q#",		uri("s",	{},		"h",		"",		"/",		"q",		""	)),
  ok("s://h:/p#f",		uri("s",	{},		"h",		"",		"/p",		{},		"f"	)),
  ok("s://h:/p?q",		uri("s",	{},		"h",		"",		"/p",		"q",		{}	)),
  ok("s://h:/p?#",		uri("s",	{},		"h",		"",		"/p",		"",		""	)),
  ok("s://h:/p?#f",		uri("s",	{},		"h",		"",		"/p",		"",		"f"	)),
  ok("s://h:/p?q#f",		uri("s",	{},		"h",		"",		"/p",		"q",		"f"	)),
  ok("s://h:/p?q#",		uri("s",	{},		"h",		"",		"/p",		"q",		""	)),

  ok("s:p#f",			uri("s",	{},		{},		{},		"p",		{},		"f"	)),
  ok("s:p?q",			uri("s",	{},		{},		{},		"p",		"q",		{}	)),
  ok("s:p?#",			uri("s",	{},		{},		{},		"p",		"",		""	)),
  ok("s:p?#f",			uri("s",	{},		{},		{},		"p",		"",		"f"	)),
  ok("s:p?q#f",			uri("s",	{},		{},		{},		"p",		"q",		"f"	)),
  ok("s:p?q#",			uri("s",	{},		{},		{},		"p",		"q",		""	)),
  ok("s:/#f",			uri("s",	{},		{},		{},		"/",		{},		"f"	)),
  ok("s:/?q",			uri("s",	{},		{},		{},		"/",		"q",		{}	)),
  ok("s:/?#",			uri("s",	{},		{},		{},		"/",		"",		""	)),
  ok("s:/?#f",			uri("s",	{},		{},		{},		"/",		"",		"f"	)),
  ok("s:/?q#f",			uri("s",	{},		{},		{},		"/",		"q",		"f"	)),
  ok("s:/?q#",			uri("s",	{},		{},		{},		"/",		"q",		""	)),
  ok("s:/p#f",			uri("s",	{},		{},		{},		"/p",		{},		"f"	)),
  ok("s:/p?q",			uri("s",	{},		{},		{},		"/p",		"q",		{}	)),
  ok("s:/p?#",			uri("s",	{},		{},		{},		"/p",		"",		""	)),
  ok("s:/p?#f",			uri("s",	{},		{},		{},		"/p",		"",		"f"	)),
  ok("s:/p?q#f",		uri("s",	{},		{},		{},		"/p",		"q",		"f"	)),
  ok("s:/p?q#",			uri("s",	{},		{},		{},		"/p",		"q",		""	)),

  ok("s:",			uri("s",	{},		{},		{},		{},		{},		{}	)),
  ok("s://",			uri("s",	{},		{},		{},		{},		{},		{}	)),
  ok("s:///",			uri("s",	{},		{},		{},		"/",		{},		{}	)),
  ok("s:///p",			uri("s",	{},		{},		{},		"/p",		{},		{}	)),
  ok("s://./p",			uri("s",	{},		".",		{},		"/p",		{},		{}	)),
  ok("s://../p",		uri("s",	{},		"..",		{},		"/p",		{},		{}	)),
  ok("s:///./p",		uri("s",	{},		{},		{},		"/./p",		{},		{}	)),
  ok("s:///../p",		uri("s",	{},		{},		{},		"/../p",	{},		{}	)),

  fail("1s:"),
  fail(":"),
  fail(":/"),
  fail("://"),
  fail(":///"),
  fail(":///p"),
  fail("://h"),
  fail("://h:123"),
  fail(":123"),
  fail(":123/"),
  fail(":123//"),
  fail(":123//path"),
  fail("s~e:"),
  fail("s://h|t"),
  fail("s://h/|p"),
  fail("s://h/p?<q"),
  fail("s://h/p#<p"),
};

using components = ::testing::TestWithParam<test_case_t>;
INSTANTIATE_TEST_CASE_P(uri, components, ::testing::ValuesIn(test_cases),);


TEST_P(components, parse)
{
  auto &test = GetParam();

  std::error_code error;
  auto view = sal::uri_view(test.uri, error);

  if (test.expect_success)
  {
    EXPECT_TRUE(!error);
    EXPECT_EQ(test.expected_components, view);
  }
  else
  {
    EXPECT_EQ(sal::uri_errc::invalid_syntax, error);
    EXPECT_FALSE(error.message().empty());
    EXPECT_STREQ("uri", error.category().name());

    EXPECT_THROW(sal::uri_view(test.uri), std::system_error);
  }
}


} // namespace
